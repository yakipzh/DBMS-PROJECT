Query
1) select 'GPA', Avg(GPA)  from GRADES
2) SELECT start_date, end_date
FROM exams
GROUP BY start_date, end_date
HAVING ( COUNT(start_date) > 0 )
//with same end date//
3) select * from faculty where OFFICE='I202';
//which faculty 
4)SELECT MAJOR_NAME, MIN(salary) as min_salary
FROM Majors
GROUP BY MAJOR_NAME;
//with min salary
5)SELECT PROFESSORS_ID, MAX(salary) as max_salary
FROM PROFESSORS
GROUP BY PROFESSORS_ID;
//max salary
6)SELECT first_name,last_name, age
FROM students
WHERE age <= 18;
//age <18
7)SELECT STAFF_ID, JOB_TITLE
FROM STAFF
WHERE JOB_TITLE = 'Senior Editor'
  AND SALARY > ALL(
    SELECT SALARY
    FROM STAFF
    WHERE JOB_TITLE = 'Junior Executive'
  );
8)
select distinct Students_ID,students.First_Name,students.Email ,Grades.GPA
 from Students, Grades
 where Students_ID = Grades.GPA order by First_Name;








Views
1) 
create view academy as
select First_Name, Last_Name
from Students
where STUDENTS_ID = 1;

2)
create view Students_view as
select Students_ID, First_Name, Last_Name, Grades.GPA
from Students, Grades
where STUDENTS_ID = Grades.Student_ID; 

3) 
create view Professors_view as
select Professors_ID, First_Name, Last_Name, Course.Course_Name
from Professors, Course
where Professors_ID = Course.Course_Name; 

Joins
1)
select * from STUDENT_ENROLLED join
students on STUDENT_ENROLLED.STUDENT_ENROLL_ID = students. STUDENTS_ID;
2)SELECT *
FROM Majors
LEFT JOIN Course ON Course.Course_ID=Major_ID
WHERE Major_ID = 15



3)

SELECT *
FROM Course
LEFT JOIN Majors ON Majors.Major_ID=Course_ID
    AND Course_ID = 20

Relational Algebra

1)π professors_id, MAX (salary) → max_salary
 γ professors_id, MAX (salary) professors
2)π start_date, end_date
 σ COUNT (start_date) > 0
  γ start_date, end_date, COUNT (start_date) exams
3)π "GPA", AVG (gpa)
 γ AVG (gpa) grades



Aggregations
1)
SELECT
  count(*)
, sum(prime)
FROM
  unnest('{2,3,5,7,11,13,17,19}'::integer[]) prime;
2)WITH src AS (
  SELECT unnest('{2,3,5,7,11,13,17,19}'::integer[]) prime
) 
SELECT
  (SELECT count(*) FROM src WHERE prime < 10) countlt
, (SELECT count(*) FROM src WHERE prime > 10) countgt;


3)SELECT
  sum((prime < 10)::integer) countlt
, sum((prime > 10)::integer) countgt
FROM
  unnest('{2,3,5,7,11,13,17,19}'::integer[]) prime;

